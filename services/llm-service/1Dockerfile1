# 多阶段构建的Dockerfile for LLM Service
# FROM golang:1.23-alpine AS builder

# # 安装必要的工具
# RUN apk add --no-cache git ca-certificates tzdata

# # 设置工作目录
# WORKDIR /app

# # 复制go mod文件
# COPY ../../go.mod ../../go.sum ./
# RUN go mod download

# # 复制源代码
# COPY . .

# # 构建应用
# RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o llm-service ./services/llm-service

# # 运行阶段
# FROM alpine:latest

# # 安装ca-certificates用于HTTPS请求
# RUN apk --no-cache add ca-certificates tzdata

# WORKDIR /root/

# # 从构建阶段复制二进制文件
# COPY --from=builder /app/llm-service .

# # 复制配置文件
# COPY --from=builder /app/services/llm-service/configs/ ./configs/

# # 创建日志目录
# RUN mkdir -p /var/log

# # 暴露端口
# EXPOSE 8080

# # 设置环境变量
# ENV GIN_MODE=release
# ENV TZ=Asia/Shanghai

# # 健康检查
# HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
#     CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# # 启动服务
# CMD ["./llm-service"]