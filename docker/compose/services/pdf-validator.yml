# ===========================================
# PDF验证服务
# ===========================================

services:
  # PDF验证服务 - API服务器
  pdf-validator-api:
    build:
      context: ../../../services/pdf-validator
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-pdf-validator-api
    ports:
      - "${PDF_VALIDATOR_EXTERNAL_PORT:-8001}:8001"
    environment:
      - DEBUG=${DEBUG:-false}
      - HOST=0.0.0.0
      - PORT=8001
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=${POSTGRES_DB}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_SCHEMA=moonshot
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - pdf_validator_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - moonshot-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # PDF验证服务 - Celery Worker
  pdf-validator-worker:
    build:
      context: ../../../services/pdf-validator
      dockerfile: Dockerfile
    command: celery -A app.celery worker --loglevel=info --concurrency=2 --queues=pdf_validation_tasks,pdf_priority_tasks --prefetch-multiplier=1
    environment:
      - DEBUG=${DEBUG:-false}
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=${POSTGRES_DB}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_SCHEMA=moonshot
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - pdf_validator_logs:/app/logs
      - /tmp:/tmp  # 临时文件目录
    healthcheck:
      test: ["CMD", "celery", "-A", "app.celery", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    networks:
      - moonshot-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Celery 任务监控
  pdf-validator-flower:
    build:
      context: ../../../services/pdf-validator
      dockerfile: Dockerfile
    command: celery -A app.celery flower --port=5555 --broker=redis://redis:6379/1
    container_name: ${COMPOSE_PROJECT_NAME}-pdf-validator-flower
    ports:
      - "${FLOWER_EXTERNAL_PORT:-5555}:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5555/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - moonshot-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  pdf_validator_logs:
    name: ${COMPOSE_PROJECT_NAME}_pdf_validator_logs

